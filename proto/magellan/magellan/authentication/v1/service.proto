syntax = "proto3";
package magellan.authentication.v1;
option go_package = "github.com/clavinjune/magellan/gen/proto/magellan/authentication/v1;v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "magellan/authentication/v1/service_login.proto";
import "magellan/authentication/v1/service_logout.proto";


// https://github.com/grpc-ecosystem/grpc-gateway/blob/master/protoc-gen-openapiv2/options/openapiv2.proto#L25-L43
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {version: "1.0"};
  external_docs: {
    url: "https://github.com/clavinjune/magellan";
    description: "authentication service";
  }
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Service {
  // Login
  //
  // {{.MethodDescriptorProto.Name}} is used for login to the system. Define `loginType` and one of `loginDetails`
  // HTTPOnly Cookie will be set under the name `mat` as Access Token and `mrt` as Refresh Token only if the Login success
  // otherwise 401 will be returned
  rpc Login(ServiceLoginRequest) returns (ServiceLoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/authentication/login"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Login to the system";
      operation_id: "authentication_login";
      consumes: "application/json";
      produces: "application/json";
      schemes: HTTP;
      schemes: HTTPS;
      responses: {
        key: "200"
        value: {
          description: "OK"
          examples: {
            key: "application/json"
            value: "{\"message\": \"OK\"}"
          }
        }
      }
      responses: {
        key: "401"
        value: {
          description: "UNAUTHORIZED"
          examples: {
            key: "application/json"
            value: "{\"message\": \"Unauthorized\"}"
          }
        };
      };
    };
  }

  // Logout
  //
  // {{.MethodDescriptorProto.Name}} is used for logout from the system
  // HTTPOnly Cookie `mat` and `mrt` will be unset
  rpc Logout(ServiceLogoutRequest) returns (ServiceLogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/authentication/logout"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Logout from the system";
      operation_id: "authentication_logout";
      schemes: HTTP;
      schemes: HTTPS;
      responses: {
        key: "204"
        }
      };
    };
  }
